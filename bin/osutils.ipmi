#! /bin/env python
import argparse
import sys
import os
import osutils

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='open ironic serial consoles in tmux')
    parser.add_argument('pattern', metavar='pattern',
                        help='pattern to apply to server names')
    parser.add_argument('-U', '--username', metavar='username', default='root',
                        help='ipmi username, default is root.')
    parser.add_argument('-P', '--password', metavar='password', default='calvin',
                        help='ipmi password, default is calvin.')
    parser.add_argument('--all-projects', dest='all_projects',
                        action='store_true',
                        help='search all projects (requires admin credentials)'
                        )
    parser.set_defaults(all_projects=False)
    args = parser.parse_args()
    kwargs = dict(pattern=args.pattern,
                  query='.driver_info.ipmi_address',
                  all_projects=args.all_projects)
    servers = sorted(
        osutils.OSNode.filter_by_server_name(**kwargs),
        key=lambda d: d.get('key')
    )
    sess_name = args.pattern
    os.popen('tmux kill-session -t %s' % sess_name)
    for index, item in enumerate(servers):
        server_name, node_ip = item.get('key'), item.get('value')
        print('Opening tmux window:', server_name)
        for fn in ['deactivate', 'activate']:
            ipmi_cmd = "ipmitool -I lanplus -H %s -U %s -P %s sol %s" % (node_ip, args.username, args.password, fn)
            if fn == 'activate':
                print(ipmi_cmd)
                if index == 0:
                    os.popen('tmux new-session -d -s %s -n %s "%s"' % (sess_name, server_name, ipmi_cmd))
                else:
                    os.popen('tmux new-window -d -t %s:%s -n %s "%s"' % (sess_name, index+1, server_name, ipmi_cmd))
            else:
                os.popen(ipmi_cmd)
    os.popen('tmux attach-session -t %s' % sess_name)
